##########################################################
# Diamond Configuration File
##########################################################

##########################################################
### Options for the Server
[server]

# Handlers for published metrics.
handlers = diamond.handler.graphite.GraphiteHandler, diamond.handler.archive.ArchiveHandler

# User diamond will run as
# Leave empty to use current user
user = 

# Group diamond will run as 
# Leave empty to use current group
group = 

# Pid file, on system if not using default PID file
# make sure you also change systemd's diamond unit
pid_file = /var/run/diamond.pid

# Directory to load collector modules from
collectors_path = /usr/share/diamond/collectors/

# Directory to load collector configs from
collectors_config_path = /etc/diamond/collectors/

# Number of seconds between each collector load
# collectors_load_delay = 1.0

# Directory to load handler configs from
handlers_config_path = /etc/diamond/handlers/

# Directory to load handler modules from
# handlers_path = /usr/share/diamond/handlers/
handlers_path = src/diamond/handler/

# Maximum number of metrics waiting to be processed by handlers.
# When metric queue is full, new metrcis are dropped.
metric_queue_size = 16384

# Abort the diamond process if the handler process exits
abort_on_handlers_process_exit = False

###################################################################
### Options for Handlers
[handlers]

# daemon logging handler(s)
keys = rotated_file

### Defaults options for all Handlers
[[default]]

[[ArchiveHandler]]

# File to write archive log files
log_file = /var/log/diamond/archive.log

# Number of days to keep archive log files
days = 7

[[GraphiteHandler]]
### Options for GraphiteHandler

# Graphite Server Host
host = 127.0.0.1

# Port to send the metrics to
port = 2003

# Socket timeout (seconds)
timeout = 15

# Batch size for metrics
batch = 1

###############################################################
### Options for collectors 
[collectors]

[[default]]
### Defaults options for all Collectors

# Uncomment and set to hardcode a hostname for the collector path
# Keep in mind, periods are separators in graphite
# hostname = my_custom_hostname

# If you prefer to just use a different way of calculating the hostname
# Uncomment and set this to one of these values

# smart = Default. Tries fqdn_short. If that is localhost, uses hostname_short 

# fqdn_short = Default. Similar to hostname -s 
# fqdn = hostname output
# fqdn_rev = hostname in reverse (com.example.www)

# uname_short = Similar to uname -n, but only the first part
# uname_rev = uname -r in reverse

# hostname_short = `hostname -s`
# hostname = `hostname`
# hostname_rev = `hostname` in reverse 

# shell = run the string set in hostname as a shell command and use its 
#  output (with spaces trimmed off from both ends)

# hostname_method = smart

# Path Prefix and Suffix
# you can use one or both to craft where you want to put metrics
# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s

# path_prefix = servers
# path_suffix = 

# Path Prefix for Virtual Machines
# If the host supports virtual machines, collectors may report per VM
# metrics. Following OpenStack nomenclature, the prefix for reporting
# per VM metrics is "instances", and metric "foo" for VM "bar" will be reported as:
# instances.bar.foo

# instance_prefix = instances

# Default Poll Interval (seconds)

# interval = 300

###################################################################
# Default enabled collectors
###################################################################
[[CPUCollector]]
enabled = True

[[DiskSpaceCollector]]
enabled = True

[[DiskUsageCollector]]
enabled = True

[[LoadAverageCollector]]
enabled = True

[[MemoryCollector]]
enabled = True

[[VMStatCollector]]
enabled = True

####################################################################
### Options for logging
# http://docs.python.org/library/logging.config.html#configuration-file-format
[loggers]

keys = root

[formatters]

keys = default

[logger_root]

level = INFO
handlers = rotated_file
propagate = 1

[handler_rotated_file]
class = handlers.TimedRotatingFileHandler
level = DEBUG
formatter = default

args = ('/var/log/diamond/diamond.log', 'midnight', 1, 7)

[formatter_default]

format = [%(asctime)s][%(levelname)s][%(threadName)s]%(message)s
datefmt = 

#########################################################
### Options for config merging
# [configs]
# path = "/etc/diamond/configs/"
# extension = ".conf"